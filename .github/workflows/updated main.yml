name: Groq AI Auto Commit and Deploy

on:
  push:
    branches:
      - main

jobs:
  ai-commit-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # allows workflow to push changes

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install Dependencies
        run: |
          pip install --upgrade groq

      # 4Ô∏è‚É£ Run Groq AI to Update Website UI
      - name: Run Groq AI to Update Website UI
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        run: |
          python << 'EOF'
import os
import subprocess
from pathlib import Path
import re
from groq import Groq

# Initialize Groq client
client = Groq(api_key=os.environ["GROQ_API_KEY"])

prompt = """
UI Design Prompt: Image-Free, High-End E-commerce
Design a sophisticated, image-free e-commerce website UI for a brand selling high-quality, exclusive products...
Return each file as:
---filename.ext---
<file content>
"""

# Generate updated UI content using Groq chat completion
response = client.chat.completions.create(
    messages=[{"role": "user", "content": prompt}],
    model="llama-3.3-70b-versatile"
)
output = response.choices[0].message.content

# Parse Groq's output to write files
matches = re.findall(r"---(.*?)---\n(.*?)(?=(?:---|$))", output, re.DOTALL)
for filename, content in matches:
    filepath = Path(filename.strip())
    filepath.parent.mkdir(parents=True, exist_ok=True)
    with open(filepath, "w", encoding="utf-8") as f:
        f.write(content.strip())

# Git commit and push changes if there are any
subprocess.run(["git", "config", "--global", "user.name", "groq-bot"])
subprocess.run(["git", "config", "--global", "user.email", "bot@example.com"])
subprocess.run(["git", "add", "."])
subprocess.run(["git", "commit", "-m", "ü§ñ Groq AI updated website UI"], check=False)
subprocess.run(["git", "push"])
          EOF

      # 5Ô∏è‚É£ Configure AWS credentials for deployment
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # 6Ô∏è‚É£ Deploy updated repo to S3
      - name: Deploy to S3
        run: |
          aws s3 sync . s3://staticwebzsitegit --delete
