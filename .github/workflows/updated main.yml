name: Gemini AI Auto Commit and Deploy

on:
  push:
    branches:
      - main

jobs:
  ai-commit-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          pip install --upgrade google-generativeai

      - name: Run Gemini AI to Update Website UI
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python << 'EOF'
          import os
          import google.generativeai as genai
          import subprocess
          from pathlib import Path
          import re

          genai.configure(api_key=os.environ["GEMINI_API_KEY"])
          model = genai.GenerativeModel("gemini-2.5-flash")

          prompt = """
          You are updating the UI of a static website project.
          - Modernize layout, colors, typography, and responsiveness.
          - Return each file in the format:
          ---filename.ext---
          <file content>
          """

          response = model.generate_content(prompt)
          output = response.text

          # Regex to safely extract filename + content
          matches = re.findall(r"---\s*(.*?)\s*---\s*\n(.*?)(?=(?:---|$))", output, re.DOTALL)

          for filename, content in matches:
              filename = filename.strip()
              if not filename:
                  continue  # skip if Gemini returned empty filename
              filepath = Path(filename)
              filepath.parent.mkdir(parents=True, exist_ok=True)
              with open(filepath, "w", encoding="utf-8") as f:
                  f.write(content.strip())

          # Git commit and push
          subprocess.run(["git", "config", "--global", "user.name", "gemini-bot"], check=True)
          subprocess.run(["git", "config", "--global", "user.email", "bot@example.com"], check=True)
          subprocess.run(["git", "add", "."], check=True)
          subprocess.run(["git", "commit", "-m", "ðŸ¤– Gemini AI updated website UI"], check=False)
          subprocess.run(["git", "push"], check=True)
          EOF

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy to S3
        run: |
          aws s3 sync . s3://staticwebzsitegit --delete --exclude ".git/*" --exclude ".github/*"
