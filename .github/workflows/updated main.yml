name: Gemini AI Auto Commit and Deploy

on:
  push:
    branches:
      - main

jobs:
  ai-commit-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # allows workflow to push changes

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2Ô∏è‚É£ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install Dependencies
        run: |
          pip install --upgrade google-generativeai

      # 4Ô∏è‚É£ Run Gemini AI to auto-update README.md (or create if missing)
      - name: Run Gemini AI Code Update
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python << 'EOF'
          import os
          import google.generativeai as genai
          import subprocess

          # Configure Gemini
          genai.configure(api_key=os.environ["GEMINI_API_KEY"])
          model = genai.GenerativeModel("gemini-2.5-flash")  # ‚úÖ Updated model

          prompt = """
          You are updating the UI of a static website project.
          - Modernize the layout, colors, and typography to be clean and professional.
          - Make the homepage visually appealing with responsive design.
          - Optimize images and assets for fast loading.  
          - Update navigation, buttons, and sections for clarity and user experience.
          - Ensure the website is mobile-friendly and accessible.
           - Return the full HTML/CSS/JS content for the website files that need modification.
          """

          # Ensure README.md exists
          if not os.path.exists("README.md"):
              with open("README.md", "w", encoding="utf-8") as f:
                  f.write("# Project README\n")

          # Read file
          with open("README.md", "r", encoding="utf-8") as f:
              readme_content = f.read()

          # Generate new content
          response = model.generate_content(
              f"Current README:\n{readme_content}\n\n{prompt}"
          )
          new_readme = response.text

          # Save updated file
          with open("README.md", "w", encoding="utf-8") as f:
              f.write(new_readme)

          # Git commit and push
          subprocess.run(["git", "config", "--global", "user.name", "gemini-bot"])
          subprocess.run(["git", "config", "--global", "user.email", "bot@example.com"])
          subprocess.run(["git", "add", "README.md"])
          subprocess.run(["git", "commit", "-m", "ü§ñ Gemini AI updated README with S3 deployment guide"])
          subprocess.run(["git", "push"])
          EOF

      # 5Ô∏è‚É£ Configure AWS credentials for deployment
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # 6Ô∏è‚É£ Deploy updated repo to S3
      - name: Deploy to S3
        run: |
          aws s3 sync . s3://staticwebzsitegit --delete
